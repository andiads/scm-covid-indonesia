{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/create-user/create-user.component.ts","webpack:///src/app/components/create-user/create-user.component.html","webpack:///src/app/components/update-user/update-user.component.ts","webpack:///src/app/components/update-user/update-user.component.html","webpack:///src/app/components/user-details/user-details.component.ts","webpack:///src/app/components/user-details/user-details.component.html","webpack:///src/app/components/user-list/user-list.component.ts","webpack:///src/app/components/user-list/user-list.component.html","webpack:///src/app/models/user.ts","webpack:///src/app/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CreateUserComponent","userService","router","user","submitted","createUser","subscribe","data","console","log","error","gotoList","save","navigate","onSubmit","UpdateUserComponent","route","snapshot","params","getUser","updateUser","UserDetailsComponent","list","UserListComponent","reloadData","users","getUserList","User","fullname","password","mail","userType","lastLogin","lastIp","createdAt","updatedAt","token","UserService","http","USERS_API_URL","VIEW_USERS_API_URL","get","post","value","put","providedIn","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,QAAMC,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,EAAR;AAAYC,gBAAU,EAAE,OAAxB;AAAiCC,eAAS,EAAE;AAA5C,KADqB,EAErB;AAAEF,UAAI,EAAE,OAAR;AAAiBG,eAAS,EAAE;AAA5B,KAFqB,EAGrB;AAAEH,UAAI,EAAE,KAAR;AAAeG,eAAS,EAAE;AAA1B,KAHqB,EAIrB;AAAEH,UAAI,EAAE,YAAR;AAAsBG,eAAS,EAAE;AAAjC,KAJqB,EAKrB;AAAEH,UAAI,EAAE,aAAR;AAAuBG,eAAS,EAAE;AAAlC,KALqB,CAAvB;;QAYaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBN,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBK,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBN,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACnB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaU,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,+CAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,e;AAAA,a;AAAA,yV;AAAA;AAAA;ACPzB;;AAEE;;AACE;;AACI;;AAAiE;;AAAS;;AAC9E;;AACA;;AACI;;AAA+D;;AAAQ;;AAC3E;;AACF;;AACF;;AACA;;AACE;;AACA;;AAAgC;;AAAS;;AACzC;;AACA;;AACE;;AACF;;AACE;;AACF;;AACF;;AAEA;;AACE;;AACI;;AAAM;;AAAqB;;AAC/B;;AACF;;;;AAbkC;;AAAA;;;;;;;;;sEDNrBA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA6BaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBANJ,CACP,uEADO,EAEP,oEAFO,EAGP,0DAHO,EAIP,qEAJO,CAMI;;;;0HAGFA,S,EAAS;AAAA,uBAflB,2DAekB,EAdlB,iGAckB,EAblB,oGAakB,EAZlB,2FAYkB,EAXlB,iGAWkB;AAXC,kBAGnB,uEAHmB,EAInB,oEAJmB,EAKnB,0DALmB,EAMnB,qEANmB;AAWD,O;AALF,K;;;;;sEAKPA,S,EAAS;cAjBrB,sDAiBqB;eAjBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,iGAFY,EAGZ,oGAHY,EAIZ,2FAJY,EAKZ,iGALY,CADN;AAQRP,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,0DAHO,EAIP,qEAJO,CARD;AAcRQ,mBAAS,EAAE,EAdH;AAeRC,mBAAS,EAAE,CAAC,2DAAD;AAfH,S;AAiBY,Q;;;;;;;;;;;;;;;;;;AC7BtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaC,mB;AAKX,mCAAoBC,WAApB,EAAsDC,MAAtD,EAAsE;AAAA;;AAAlD,aAAAD,WAAA,GAAAA,WAAA;AAAkC,aAAAC,MAAA,GAAAA,MAAA;AAHtD,aAAAC,IAAA,GAAa,IAAI,iDAAJ,EAAb;AACA,aAAAC,SAAA,GAAY,KAAZ;AAEyE;;;;mCAEjE,CACP;;;kCAEM;AACL,eAAKA,SAAL,GAAgB,KAAhB;AACA,eAAKD,IAAL,GAAY,IAAI,iDAAJ,EAAZ;AACD;;;+BAEM;AACL,eAAKF,WAAL,CAAiBI,UAAjB,CAA4B,KAAKF,IAAjC,EACGG,SADH,CAEI,UAAAC,IAAI;AAAA,mBAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAJ;AAAA,WAFR,EAGI,UAAAG,KAAK;AAAA,mBAAIF,OAAO,CAACC,GAAR,CAAYC,KAAZ,CAAJ;AAAA,WAHT;AAIA,eAAKP,IAAL,GAAY,IAAI,iDAAJ,EAAZ;AACA,eAAKQ,QAAL;AACD;;;mCAEU;AACT,eAAKP,SAAL,GAAiB,IAAjB;AACA,eAAKQ,IAAL;AACD;;;mCAEU;AACT,eAAKV,MAAL,CAAYW,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD;;;;;;;uBA/BUb,mB,EAAmB,mI,EAAA,uH;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,a;AAAA,osB;AAAA;AAAA;ACVhC;;AAAI;;AAAW;;AACf;;AACE;;AAAM;AAAA,mBAAY,IAAAc,QAAA,EAAZ;AAAsB,WAAtB;;AACJ;;AACE;;AAAkB;;AAAQ;;AAC1B;;AAA+D;AAAA;AAAA;;AAA/D;;AACF;;AAEA;;AACE;;AAAkB;;AAAM;;AACxB;;AAA2D;AAAA;AAAA;;AAA3D;;AACF;;AAEA;;AACE;;AAAkB;;AAAQ;;AAC1B;;AAAmE;AAAA;AAAA;;AAAnE;;AACF;;AAEA;;AACE;;AAAkB;;AAAI;;AACtB;;AAA4D;AAAA;AAAA;;AAC1D;;AAAkB;;AAAK;;AACvB;;AAAkB;;AAAQ;;AAC1B;;AAAkB;;AAAG;;AACrB;;AAAkB;;AAAI;;AACxB;;AACF;;AAEA;;AAA8C;;AAAM;;AACtD;;AACF;;AAEA;;AACE;;AAAI;;AAA2B;;AAEjC;;;;AAlCK;;AAAA;;AAIgE;;AAAA;;AAKJ;;AAAA;;AAKQ;;AAAA;;AAKP;;AAAA;;AAY7D;;AAAA;;;;;;;;;sEDtBQd,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTP,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEVhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaoB,mB;AAMX,mCAAoBC,KAApB,EAAmDd,MAAnD,EACUD,WADV,EACoC;AAAA;;AADhB,aAAAe,KAAA,GAAAA,KAAA;AAA+B,aAAAd,MAAA,GAAAA,MAAA;AACzC,aAAAD,WAAA,GAAAA,WAAA;AAHV,aAAAG,SAAA,GAAY,KAAZ;AAGuC;;;;mCAE5B;AAAA;;AACT,eAAKD,IAAL,GAAY,IAAI,iDAAJ,EAAZ;AAEA,eAAKrB,EAAL,GAAU,KAAKkC,KAAL,CAAWC,QAAX,CAAoBC,MAApB,CAA2B,IAA3B,CAAV;AAEA,eAAKjB,WAAL,CAAiBkB,OAAjB,CAAyB,KAAKrC,EAA9B,EACGwB,SADH,CACa,UAAAC,IAAI,EAAI;AACjBC,mBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,iBAAI,CAACJ,IAAL,GAAYI,IAAZ;AACD,WAJH,EAIK,UAAAG,KAAK;AAAA,mBAAIF,OAAO,CAACC,GAAR,CAAYC,KAAZ,CAAJ;AAAA,WAJV;AAKD;;;qCAEY;AACX,eAAKT,WAAL,CAAiBmB,UAAjB,CAA4B,KAAKtC,EAAjC,EAAqC,KAAKqB,IAA1C,EACGG,SADH,CACa,UAAAC,IAAI;AAAA,mBAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAJ;AAAA,WADjB,EACwC,UAAAG,KAAK;AAAA,mBAAIF,OAAO,CAACC,GAAR,CAAYC,KAAZ,CAAJ;AAAA,WAD7C;AAEE,eAAKP,IAAL,GAAY,IAAI,iDAAJ,EAAZ;AACA,eAAKQ,QAAL;AACH;;;mCAEU;AACT,eAAKP,SAAL,GAAe,IAAf;AACA,eAAKgB,UAAL;AACD;;;mCAEU;AACT,eAAKlB,MAAL,CAAYW,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD;;;;;;;uBAnCUE,mB,EAAmB,+H,EAAA,uH,EAAA,mI;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,a;AAAA,qrB;AAAA;AAAA;ACVhC;;AAAI;;AAAW;;AACf;;AACE;;AAAM;AAAA,mBAAY,IAAAD,QAAA,EAAZ;AAAsB,WAAtB;;AACJ;;AACE;;AAAkB;;AAAQ;;AAC1B;;AAA+D;AAAA;AAAA;;AAA/D;;AACF;;AAEA;;AACE;;AAAkB;;AAAM;;AACxB;;AAA2D;AAAA;AAAA;;AAA3D;;AACF;;AAEA;;AACE;;AAAkB;;AAAQ;;AAC1B;;AAAmE;AAAA;AAAA;;AAAnE;;AACF;;AAEA;;AACE;;AAAkB;;AAAI;;AACtB;;AAA4D;AAAA;AAAA;;AAC1D;;AAAkB;;AAAK;;AACvB;;AAAkB;;AAAQ;;AAC1B;;AAAkB;;AAAG;;AACrB;;AAAkB;;AAAI;;AACxB;;AACF;;AACA;;AAA8C;;AAAM;;AACtD;;AACF;;;;AA5BK;;AAAA;;AAIgE;;AAAA;;AAKJ;;AAAA;;AAKQ;;AAAA;;AAKP;;AAAA;;;;;;;;;sEDVrDC,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTtB,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEVhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGA;;AACE;;AACI;;AAAO;;AAAG;;AAAI;;AAAI;;AAAS;;AAC/B;;AACA;;AACE;;AAAO;;AAAG;;AAAU;;AAAI;;AAAS;;AACnC;;AACA;;AACE;;AAAO;;AAAG;;AAAO;;AAAI;;AAAS;;AAChC;;AACA;;AACE;;AAAO;;AAAG;;AAAO;;AAAI;;AAAS;;AAChC;;AACA;;AACE;;AAAO;;AAAG;;AAAY;;AAAI;;AAAS;;AACrC;;AACA;;AACE;;AAAO;;AAAG;;AAAS;;AAAI;;AAAS;;AAClC;;AACA;;AACE;;AAAO;;AAAG;;AAAQ;;AAAI;;AAAS;;AACjC;;AACA;;AACE;;AAAO;;AAAG;;AAAY;;AAAI;;AAAS;;AACrC;;AACA;;AACE;;AAAO;;AAAG;;AAAY;;AAAI;;AAAS;;AACrC;;AACF;;;;;;AA1BiC;;AAAA;;AAGI;;AAAA;;AAGH;;AAAA;;AAGA;;AAAA;;AAGK;;AAAA;;AAGH;;AAAA;;AAGD;;AAAA;;AAGI;;AAAA;;AAGA;;AAAA;;;;QDlB1B0B,oB;AAKX,oCAAoBL,KAApB,EAAmDd,MAAnD,EACUD,WADV,EACoC;AAAA;;AADhB,aAAAe,KAAA,GAAAA,KAAA;AAA+B,aAAAd,MAAA,GAAAA,MAAA;AACzC,aAAAD,WAAA,GAAAA,WAAA;AAA6B;;;;mCAE/B;AAAA;;AACN,eAAKE,IAAL,GAAY,IAAI,iDAAJ,EAAZ;AACA,eAAKrB,EAAL,GAAU,KAAKkC,KAAL,CAAWC,QAAX,CAAoBC,MAApB,CAA2B,IAA3B,CAAV;AAEA,eAAKjB,WAAL,CAAiBkB,OAAjB,CAAyB,KAAKrC,EAA9B,EACGwB,SADH,CACa,UAAAC,IAAI,EAAI;AACjBC,mBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,kBAAI,CAACJ,IAAL,GAAYI,IAAZ;AACD,WAJH,EAIK,UAAAG,KAAK;AAAA,mBAAIF,OAAO,CAACC,GAAR,CAAYC,KAAZ,CAAJ;AAAA,WAJV;AAKD;;;+BAEM;AACL,eAAKR,MAAL,CAAYW,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD;;;;;;;uBArBUQ,oB,EAAoB,+H,EAAA,uH,EAAA,mI;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,c;AAAA,a;AAAA,kE;AAAA;AAAA;ACXjC;;AAAI;;AAAY;;AAEhB;;AACA;;AA8BA;;AACA;;AACA;;AAAQ;AAAA,mBAAS,IAAAC,IAAA,EAAT;AAAe,WAAf;;AAAyC;;AAAiB;;AAAS;;;;AAhCtE;;AAAA;;;;;;;;;sEDQQD,oB,EAAoB;cALhC,uDAKgC;eALtB;AACT5B,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEXjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACgBU;;AACE;;AAAI;;AAAW;;AACf;;AAAI;;AAAiB;;AACrB;;AAAI;;AAAa;;AACjB;;AAAI;;AAAiB;;AACrB;;AAAI;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAqD;;AAAM;;AACnE;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA8E;;AAAO;;AACjG;;AACF;;;;;;AAPM;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;QDRH4B,iB;AAGX,iCACUtB,WADV,EAEUC,MAFV,EAE0B;AAAA;;AADhB,aAAAD,WAAA,GAAAA,WAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AAAkB;;;;mCAEjB;AACT,eAAKsB,UAAL;AACD;;;qCAEY;AACX,eAAKC,KAAL,GAAa,KAAKxB,WAAL,CAAiByB,WAAjB,EAAb;AACD;;;oCAEW5C,E,EAAY;AACtB,eAAKoB,MAAL,CAAYW,QAAZ,CAAqB,CAAC,SAAD,EAAY/B,EAAZ,CAArB;AACD;;;mCAEUA,E,EAAY;AACrB,eAAKoB,MAAL,CAAYW,QAAZ,CAAqB,CAAC,QAAD,EAAW/B,EAAX,CAArB;AACD;;;;;;;uBArBUyC,iB,EAAiB,mI,EAAA,uH;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA,e;AAAA,a;AAAA,kP;AAAA;AAAA;ACZ9B;;AACI;;AACE;;AAAI;;AAAS;;AACf;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAAE;;AACN;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAK;;AACT;;AAAI;;AAAK;;AACT;;AAAI;;AAAO;;AACb;;AACF;;AACA;;AACE;;;;AASF;;AACF;;AACF;;AACF;;;;AAZY;;AAAA;;;;;;;;;;sEDJDA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT9B,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEZ9B;AAAA;;;AAAA;AAAA;AAAA;;QAAagC,I,GAAb;AAAA;;AAEI,WAAAC,QAAA,GAAiB,EAAjB;AACA,WAAAC,QAAA,GAAiB,EAAjB;AACA,WAAAC,IAAA,GAAa,EAAb;AACA,WAAAC,QAAA,GAAiB,EAAjB;AACA,WAAAC,SAAA,GAAkB,EAAlB;AACA,WAAAC,MAAA,GAAe,EAAf;AAEA,WAAAC,SAAA,GAAkB,EAAlB;AACA,WAAAC,SAAA,GAAkB,EAAlB;AACA,WAAAC,KAAA,GAAc,EAAd;AACH,K;;;;;;;;;;;;;;;;;ACZD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,oE,CAIA;;;QAKaC,W;AAMX,2BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAJZ,aAAAC,aAAA,GAAgB,oCAAhB;AAEA,aAAAC,kBAAA,GAAqB,sCAArB;AAEiC;;;;gCAEjC1D,E,EAAU;AAChB,iBAAO,KAAKwD,IAAL,CAAUG,GAAV,WAAiB,KAAKD,kBAAtB,cAA4C1D,EAA5C,EAAP;AACD;;;mCAEUqB,I,EAAY;AACrB,iBAAO,KAAKmC,IAAL,CAAUI,IAAV,WAAkB,KAAKH,aAAvB,WAA4CpC,IAA5C,CAAP;AACD,S,CAED;;;;mCACWrB,E,EAAY6D,K,EAAU;AAC/B,iBAAO,KAAKL,IAAL,CAAUM,GAAV,WAAiB,KAAKL,aAAtB,cAAuCzD,EAAvC,GAA6C6D,KAA7C,CAAP;AACD;;;sCAEU;AACT,iBAAO,KAAKL,IAAL,CAAUG,GAAV,WAAiB,KAAKD,kBAAtB,EAAP;AACD;;;;;;;uBAvBUH,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVQ,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACTxB;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIzC,OAAO,CAACE,KAAR,CAAcuC,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserDetailsComponent } from './components/user-details/user-details.component';\nimport { CreateUserComponent } from './components/create-user/create-user.component';\nimport { UserListComponent } from './components/user-list/user-list.component';\nimport { UpdateUserComponent } from './components/update-user/update-user.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'users', pathMatch: 'full' },\n  { path: 'users', component: UserListComponent },\n  { path: 'add', component: CreateUserComponent },\n  { path: 'update/:id', component: UpdateUserComponent },\n  { path: 'details/:id', component: UserDetailsComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Angular 9 + Spring Boot SCM Covid19 Indonesia';\n}\n","<nav class=\"navbar navbar-expand-sm bg-primary navbar-dark\">\n  <!-- Links -->\n  <ul class=\"navbar-nav\">\n    <li class=\"nav-item\">\n        <a routerLink=\"users\" class=\"nav-link\" routerLinkActive=\"active\">User List</a>\n    </li>\n    <li class=\"nav-item\">\n        <a routerLink=\"add\" class=\"nav-link\" routerLinkActive=\"active\">Add User</a>\n    </li>\n  </ul>\n</nav>\n<div class=\"container\">\n  <br>\n  <h2 style=\"text-align: center;\">{{title}}</h2>\n  <hr>  \n  <div class=\"card\">\n    <div class=\"card-body\">\n  <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n\n<footer class=\"footer\">\n  <div class=\"container\">\n      <span>Developed by Nusacamp</span>\n  </div>\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CreateUserComponent } from './components/create-user/create-user.component';\nimport { UserDetailsComponent } from './components/user-details/user-details.component';\nimport { UserListComponent } from './components/user-list/user-list.component';\nimport { UpdateUserComponent } from './components/update-user/update-user.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateUserComponent,\n    UserDetailsComponent,\n    UserListComponent,\n    UpdateUserComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../services/user.service';\nimport { Router } from '@angular/router';\nimport { User } from '../../models/user';\n\n@Component({\n  selector: 'app-create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.css']\n})\nexport class CreateUserComponent implements OnInit {\n\n  user: User = new User();\n  submitted = false;\n\n  constructor(private userService: UserService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  newUser(): void {\n    this.submitted =false;\n    this.user = new User();\n  }\n\n  save() {\n    this.userService.createUser(this.user)\n      .subscribe(\n        data => console.log(data), \n        error => console.log(error));\n    this.user = new User();\n    this.gotoList();\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    this.save();\n  }\n\n  gotoList() {\n    this.router.navigate(['users']);\n  }\n}\n","<h3>Create User</h3>\n<div [hidden]=\"submitted\" style=\"width: 400px;\">\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"name\">Fullname</label>\n      <input type=\"text\" class=\"form-control\" id=\"fullname\" required [(ngModel)]=\"user.fullname\" name=\"fullname\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">E-Mail</label>\n      <input type=\"text\" class=\"form-control\" id=\"mail\" required [(ngModel)]=\"user.mail\" name=\"mail\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Password</label>\n      <input type=\"password\" class=\"form-control\" id=\"password\" required [(ngModel)]=\"user.password\" name=\"password\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Role</label>\n      <select class=\"form-control\" name=\"role\" id=\"role\" required [(ngModel)]=\"user.userType\" #role=\"ngModel\">\n        <option value=\"1\">ADMIN</option>\n        <option value=\"2\">KEMENKES</option>\n        <option value=\"3\">LAB</option>\n        <option value=\"4\">BNPB</option>\n      </select>\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n  </form>\n</div>\n\n<div [hidden]=\"!submitted\">\n  <h4>You submitted successfully!</h4>\n  <!-- <button class=\"btn btn-success\" (click)=\"newEmployee()\">Add</button> -->\n</div>","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-update-user',\n  templateUrl: './update-user.component.html',\n  styleUrls: ['./update-user.component.css']\n})\nexport class UpdateUserComponent implements OnInit {\n\n  id: number;\n  user: User;\n  submitted = false;\n\n  constructor(private route: ActivatedRoute, private router: Router,\n    private userService: UserService) { }\n\n  ngOnInit() {\n    this.user = new User();\n\n    this.id = this.route.snapshot.params['id'];\n\n    this.userService.getUser(this.id)\n      .subscribe(data => {\n        console.log(data)\n        this.user = data;\n      }, error => console.log(error));\n  }\n\n  updateUser() {\n    this.userService.updateUser(this.id, this.user)\n      .subscribe(data => console.log(data), error => console.log(error));\n      this.user = new User();\n      this.gotoList();\n  }\n\n  onSubmit() {\n    this.submitted=true;\n    this.updateUser();\n  }\n\n  gotoList() {\n    this.router.navigate(['users']);\n  }\n\n}\n","<h3>Update User</h3>\n<div [hidden]=\"submitted\" style=\"width: 400px;\">\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"name\">Fullname</label>\n      <input type=\"text\" class=\"form-control\" id=\"fullname\" required [(ngModel)]=\"user.fullname\" name=\"fullname\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">E-Mail</label>\n      <input type=\"text\" class=\"form-control\" id=\"mail\" required [(ngModel)]=\"user.mail\" name=\"mail\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Password</label>\n      <input type=\"password\" class=\"form-control\" id=\"password\" required [(ngModel)]=\"user.password\" name=\"password\">\n    </div>\n    \n    <div class=\"form-group\">\n      <label for=\"name\">Role</label>\n      <select class=\"form-control\" name=\"role\" id=\"role\" required [(ngModel)]=\"user.userType\" #role=\"ngModel\">\n        <option value=\"1\">ADMIN</option>\n        <option value=\"2\">KEMENKES</option>\n        <option value=\"3\">LAB</option>\n        <option value=\"4\">BNPB</option>\n      </select>\n    </div>\n    <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n  </form>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from '../../models/user';\nimport { UserService } from '../../services/user.service';\nimport { UserListComponent } from '../user-list/user-list.component';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.css']\n})\nexport class UserDetailsComponent implements OnInit {\n\n  id: number;\n  user: User;\n\n  constructor(private route: ActivatedRoute, private router: Router,\n    private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.user = new User();\n    this.id = this.route.snapshot.params['id'];\n\n    this.userService.getUser(this.id)\n      .subscribe(data => {\n        console.log(data)\n        this.user = data;\n      }, error => console.log(error));\n  }\n\n  list() {\n    this.router.navigate(['users']);\n  }\n\n}\n","<h2>User Details</h2> \n\n<hr/>\n<div *ngIf=\"user\">\n  <div>\n      <label><b>ID: </b></label> {{user.id}}\n  </div>\n  <div>\n    <label><b>Fullname: </b></label> {{user.fullname}}\n  </div>\n  <div>\n    <label><b>Email: </b></label> {{user.mail}}\n  </div>\n  <div>\n    <label><b>Roles: </b></label> {{user.userType}}\n  </div>\n  <div>\n    <label><b>Last Login: </b></label> {{user.lastLogin}}\n  </div>  \n  <div>\n    <label><b>Last IP: </b></label> {{user.lastIp}}\n  </div>\n  <div>\n    <label><b>Status: </b></label> {{user.status}}\n  </div>\n  <div>\n    <label><b>Created At: </b></label> {{user.createdAt}}\n  </div>\n  <div>\n    <label><b>Updated At: </b></label> {{user.updatedAt}}\n  </div>\n</div>\n\n<br>\n<br>\n<button (click)=\"list()\" class=\"btn btn-primary\">Back to User List</button><br>\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user';\nimport { UserDetailsComponent } from '../user-details/user-details.component';\nimport { UserService } from '../../services/user.service';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n  users: Observable<User[]>;\n\n  constructor(\n    private userService: UserService, \n    private router: Router) {}\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.users = this.userService.getUserList();\n  }\n\n  userDetails(id: number) {\n    this.router.navigate(['details', id]);\n  }\n\n  updateUser(id: number) {\n    this.router.navigate(['update', id]);\n  }\n}\n","<div class=\"panel panel-primary\">\n    <div class=\"panel-heading\">\n      <h2>User List</h2>\n    </div>\n    <div class=\"panel-body\">\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Fullname</th>\n            <th>Email</th>\n            <th>Roles</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let user of users | async\">\n            <td>{{user.id}}</td>\n            <td>{{user.fullname}}</td>\n            <td>{{user.mail}}</td>\n            <td>{{user.userType}}</td>\n            <td><button (click)=\"updateUser(user.id)\" class=\"btn btn-danger\">Update</button>\n                <button (click)=\"userDetails(user.id)\" class=\"btn btn-info\" style=\"margin-left: 10px\">Details</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>","export class User {\r\n    id: number;\r\n    fullname: string=\"\";\r\n    password: string=\"\";\r\n    mail: string=\"\";\r\n    userType: string=\"\";\r\n    lastLogin: string=\"\";\r\n    lastIp: string=\"\";\r\n    status: number;\r\n    createdAt: string=\"\";\r\n    updatedAt: string=\"\";\r\n    token: string=\"\";\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {  Observable } from 'rxjs';\n\n//let USERS_API_URL = \"http://localhost:8888/api/v1/users/\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private USERS_API_URL = 'http://localhost:8888/api/v1/users';\n  \n  private VIEW_USERS_API_URL = 'http://localhost:8888/api/v1/v-users';\n\n  constructor(private http: HttpClient) { }\n\n  getUser(id: number): Observable<any> {\n    return this.http.get(`${this.VIEW_USERS_API_URL}/${id}`);\n  }\n\n  createUser(user: Object): Observable<Object> {\n    return this.http.post(`${this.USERS_API_URL}/add`, user);\n  }\n\n  // tslint:disable-next-line: ban-types\n  updateUser(id: number, value: any): Observable<Object> {\n    return this.http.put(`${this.USERS_API_URL}/${id}`, value);\n  }\n\n  getUserList(): Observable<any> {\n    return this.http.get(`${this.VIEW_USERS_API_URL}`);\n  }\n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}